the file </./Syntax> is like the entrypoint/"main"/index.html. it defines the syntax
the file </Words> is interpreted as a list of "word"s. first divide it into lines, each line can start with any char, but if it starts with the char  `-` itself folowed by a space char, and they are not escaped, then that is not content but demarcation, and it indicates the start of a new item in the list right at the point where the space char ends.
ok so these items of the list, each one is a commentary. the subject is all the git commits done before the commit that added that item to the list (plus the commit itself) , ie referring to the changeset, less the part that is referring to the item itself
btw you can only add items to the list not subtract. by appending
darn, just realiez one thing. pretty screwed. that that means you must file in an 'empty' comment to act as a demarcator if you want to refer only to some of the edits ecver since the previous comment.
ok anwyay to conitnue from p2, so if you got 2+ items in a commit, then only the first item is used as the comment. the secnod item is a comment on the first, the 3rd item is a comment on the 2nd, etc etc.
btw instead of the `-` char, then char can be `!` as well, which will refer to instead of a rando comment, it is actually a changemsg. changemsg means that you have sucessfully created a "publish". the subject is all the commits since the prevoius "publish", lessing the parts considered changemsg. this means the comments between the two "publish" are also considerred part of the subject
p235, super intseinrg insfmrtypingp, i realized taht acftually means i can have another char as well, that encompasses the first two, thus creating another level, dne another char for the 4th lvl, ad infinitum
well it's easy to fix the demarcation problem with smt like RE1, RE2, etc where the num refers to how many prior commits the comment is restricted to use as subject but wonder if can make it noncomplex
ok now i want a space char is not deifnifetly required after the `-` or `!` char. wait, in fact i cna just allow `-- ` which will be expanded considered as two lines when doing the dividing into lines step. ok its not so great cause it is indented. alrights so i got a cool idea i will just replace it with a equals sign. okm so this means that when doing a demarcation, just need to put one char `-` like that dun have to add a space behind if a space is all theres going to be. then when its "replaced" by a equals sign, well actually the equals sign is just simply expanded as asif theres a `-` above it. prettyh cool actually
looks like im done
one more thing, not just `-` or `!` char but `#` is also accepted. `#` however indicates that the unit is not an item in the list. so its like for comments/drafting. in this case drafting will not need to affect the contents of the preiovus commentary
re `2+ items in a commit`. ensure taht they are indented. and since the `--` syntax is no longer resreved, use taht for indentation. 
if you need to undo items, just remove them from the back, cap 1 for now
